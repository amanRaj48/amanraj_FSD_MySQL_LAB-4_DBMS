>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ECOM Database <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	

	>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>CREATION & INSERTION QUERIES<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

create database ecom;
use ecom;

	----------------------------------------------------------------------- Supplier Table ----------------------------------------------------------------------------------------------------

CREATE TABLE supplier (
    supp_id INT PRIMARY KEY,
    supp_name VARCHAR(50) NOT NULL,
    supp_city VARCHAR(50) NOT NULL,
    supp_phone VARCHAR(50) NOT NULL
);

insert into supplier values(1,"Rajesh Retails","Delhi",1234567890);
insert into supplier values(2,"Appario Ltd.","Mumbai",2589631470);
insert into supplier values(3,"Knome products","Banglore",9785462315);
insert into supplier values(4,"Bansal Retails","Kochi", 8975463285);
insert into supplier values(5,"Mittal Ltd.","Lucknow", 7898456532);

	------------------------------------------------------------------------------ Customer Table ------------------------------------------------------------------------------------------------

CREATE TABLE customer (
    cus_id INT PRIMARY KEY,
    cus_name VARCHAR(20) NOT NULL,
    cus_phone VARCHAR(10) NOT NULL,
    cus_city VARCHAR(30) NOT NULL,
    cus_gender CHAR
);

insert into customer values(1,"AAKASH", 9999999999,"DELHI",'M');
insert into customer values(2,"AMAN", 9785463215,"NOIDA",'M');
insert into customer values(3,"NEHA", 9999999999,"MUMBAI",'F');
insert into customer values(4,"MEGHA", 9994562399,"KOLKATA",'F');
insert into customer values(5,"PULKIT",7895999999,"LUCKNOW",'M');


			---------------------------------------------------------- Category  Table -------------------------------------------------------------

CREATE TABLE category (
    cat_id INT PRIMARY KEY,
    cat_name VARCHAR(20) NOT NULL
);

insert into category values(1,"BOOKS");
insert into category values(2,"GAMES");
insert into category values(3,"GROCERIES");
insert into category values(4,"ELECTRONICS");
insert into category values(5,"CLOTHES");


		-------------------------------------------------------------------      Product Table   -------------------------------------------------------------

CREATE TABLE product (
    pro_id INT PRIMARY KEY,
    pro_name VARCHAR(20) NOT NULL DEFAULT 'Dummy',
    pro_desc VARCHAR(60),
    cat_id INT,
    FOREIGN KEY (cat_id)
        REFERENCES category (cat_id)
);

insert into product values(1,"GTA V","Windows 7 and above with i5 processor and 8GB RAM",2);
insert into product values(2,"TSHIRT","SIZE-L with Black, Blue and White variations",5);
insert into product values(3,"ROG LAPTOP","Windows 10 with 15inch screen, i7 processor, 1TB SSD", 4);
insert into product values(4,"OATS","Highly Nutritious from Nestle",3);
insert into product values(5,"HARRY POTTER","Best Collection of all time by J.K Rowling", 1);
insert into product values(6,"MILK","1L Toned MIlk", 3);
insert into product values(7,"Boat Earphones","1.5Meter long Dolby Atmos", 4);
insert into product values(8,"Jeans","Stretchable Denim Jeans with various sizes and color", 5);
insert into product values(9,"Project IGI","compatible with windows 7 and above",2);
insert into product values(10,"Hoodie","Black GUCCI for 13 yrs and above", 5);
insert into product values (11,"Rich Dad Poor Dad","Written by RObert Kiyosaki", 1);
insert into product values (12,"Train Your Brain","By Shireen Stephen", 1);


		--------------------------------------------------------------  Supplier_Pricing Table  ------------------------------------------------------------------------

CREATE TABLE supplier_pricing (
    pricing_id INT PRIMARY KEY,
    pro_id INT,
    FOREIGN KEY (pro_id)
        REFERENCES product (pro_id),
    supp_id INT,
    FOREIGN KEY (supp_id)
        REFERENCES supplier (supp_id),
    supp_price INT DEFAULT 0
);

insert into supplier_pricing values(1,1, 2, 1500);
insert into supplier_pricing values(2, 3, 5, 30000);
insert into supplier_pricing values(3, 5, 1, 3000);
insert into supplier_pricing values(4, 2, 3, 2500);
insert into supplier_pricing values(5, 4, 1, 1000);
insert into supplier_pricing values(6, 12, 2, 780);
insert into supplier_pricing values(7, 12, 4, 789);
insert into supplier_pricing values(8, 3, 1, 31000);
insert into supplier_pricing values(9, 1, 5, 1450);
insert into supplier_pricing values(10, 4, 2, 999);
insert into supplier_pricing values(11, 7, 3, 549);
insert into supplier_pricing values(12, 7, 4, 529);
insert into supplier_pricing values(13, 6, 2, 105);
insert into supplier_pricing values(14, 6, 1, 99);
insert into supplier_pricing values(15, 2, 5, 2999);
insert into supplier_pricing values(16, 5, 2, 2999);

	  ------------------------------------------------------------  Orders Table  ----------------------------------------------------------------------------------------------------------

CREATE TABLE orders (
    ord_id INT PRIMARY KEY,
    ord_amount INT NOT NULL,
    ord_date DATE NOT NULL,
    cus_id INT,
    FOREIGN KEY (cus_id)
        REFERENCES customer (cus_id),
    pricing_id INT,
    FOREIGN KEY (pricing_id)
        REFERENCES supplier_pricing (pricing_id)
);

insert into orders values(101,1500,"2021-10-06", 2, 1);
insert into orders values(102,1000,"2021-10-12",3,5);
insert into orders values(103, 30000, "2021-09-16", 5, 2);
insert into orders values(104, 1500, "2021-10-05", 1, 1);
insert into orders values(105, 3000, "2021-08-16", 4, 3);
insert into orders values(106, 1450, "2021-08-18", 1, 9);
insert into orders values(107, 789, "2021-09-01", 3, 7);
insert into orders values(108, 780, "2021-09-07", 5, 6);
insert into orders values(109, 3000, "2021-00-10", 5, 3);
insert into orders values(110, 2500, "2021-09-10", 2, 4);
insert into orders values(111, 1000, "2021-09-15", 4, 5);
insert into orders values(112, 789, "2021-09-16", 4, 7);
insert into orders values(113, 31000, "2021-09-16", 1, 8);
insert into orders values(114, 1000,"2021-09-16", 3, 5);
insert into orders values(115, 3000, "2021-09-16", 5, 3);
insert into orders values(116, 99," 2021-09-17 ",2, 14);



		------------------------------------------------------- Rating Table -----------------------------------------------------------------------------------------------------

CREATE TABLE rating (
    rat_id INT PRIMARY KEY,
    ord_id INT,
    FOREIGN KEY (ord_id)
        REFERENCES orders (ord_id),
    rat_ratstars INT NOT NULL
);

insert into rating values
(1,101,4),
(2,102,3),
(3,103,1),
(4,104,2),
(5,105,4),
(6,106,3),
(7,107,4),
(8,108,4),
(9,109,3),
(10,110,5),
(11,111,3),
(12,112,4),
(13,113,2),
(14,114,1),
(15,115,1),
(16,116,0)
;



		>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> RETRIEVAL QUERIES <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

Query-1----> Display the total number of customers based on gender who have placed individual orders of worth at least Rs.3000.

select cus_gender,count(distinct customer.cus_id) as TotalCustomers
from customer
join orders on customer.cus_id=orders.cus_id
where orders.ord_amount>=3000
group by cus_gender;


Query-2----> Display all the orders along with product name ordered by a customer having Customer_Id=2.

select cus_name, cus_city, o.ord_amount, o.pricing_id, s.pro_id, p.pro_name, p.pro_desc
from customer inner join orders as o 
on customer.cus_id=o.cus_id 
inner join supplier_pricing as s on o.pricing_id = s.pricing_id
inner join product as p on s.pro_id=p.pro_id and customer.cus_id=2;


Query-3----> Display the Supplier details who can supply more than one product.

select s.supp_name, count(p.pro_name) as num_of_products from supplier as s 
inner join supplier_pricing as sp on s.supp_id=sp.supp_id
inner join product as p on sp.PRO_ID=p.PRO_ID
group by s.SUPP_NAME
having num_of_products > 1;


Query-4---->  Find the least expensive product from each category and print the table with category id, name, product name and price of the product.

select c.cus_name, o.ord_amount, o.ord_date, p.pro_name, p.pro_desc  from orders as o 
inner join supplier_pricing as sp on o.pricing_id=sp.pricing_id
inner join product as p on sp.pro_id=p.pro_id 
inner join customer as c on o.cus_id=c.cus_id where o.ord_date > "2021-09-01";


Query-5----> Display the Id and Name of the Product ordered after “2021-10-05”.

select p.pro_id, p.pro_name from supplier_pricing as sp, product as p, orders as o
where sp.pro_id = p.pro_id and o.pricing_id = sp.pricing_id and o.ord_date > '2020-10-05';


Query-6----> Display customer name and gender whose names start or end with character 'A'.

select customer.cus_name,customer.cus_gender from customer where customer.cus_name like 'A%' or customer.cus_name like '%A';




